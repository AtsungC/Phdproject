lines(x, y, type = "s", ...)
else {
a <- attributes(attr(m, "terms"))
yvar <- as.character(a$variables[1 + a$response])
xo <- m[[yvar]]
if (is.factor(xo))
ylim <- c(0, 1)
else ylim <- range(xo)
plot(x, y, ylab = yvar, xlab = var, type = "s", ylim = ylim,
xaxs = "i", ...)
}
invisible(list(x = x, y = y))
}
else {
if (!missing(ordvars)) {
ind <- match(var, ordvars)
if (any(is.na(ind)))
stop("unmatched names in vars")
var <- ordvars[sort(ind)]
}
lab <- frame$yval[leaves]
if (is.null(frame$yprob))
lab <- format(signif(lab, 3L))
else if (match(label, attr(tree, "ylevels"), nomatch = 0L))
lab <- format(signif(frame$yprob[leaves, label],
3L))
rx <- range(m[[var[1L]]])
rx <- rx + c(-0.025, 0.025) * diff(rx)
rz <- range(m[[var[2L]]])
rz <- rz + c(-0.025, 0.025) * diff(rz)
xrange <- c(rx, rz)[c(1, 3, 2, 4)]
xcoord <- NULL
ycoord <- NULL
xy <- ptXlines(x, frame$var, xrange, xcoord, ycoord,
var)
xx <- matrix(xy$xcoord, nrow = 4L)
yy <- matrix(xy$ycoord, nrow = 2L)
return(
list(
annotate(geom="segment", x=xx[1L, ], y=xx[2L, ], xend=xx[3L, ], yend=xx[4L, ]),
annotate(geom="text", x=yy[1L, ], y=yy[2L, ], label=as.character(lab), ...)
)
)
}
}
g1<-
get(mouse.name) %>% filter(Point=='Head') %>%
ggplot(aes(t, Angle)) +  geom_line(col='red')  +
NULL
g1 + facet_grid( ~ Run)
anim1<- plot.Y_vs_Angle(names.sheets[9], 'Centre')
magick::image_write(animate(anim1), path='first_plot.gif')
plot(anim1)
### summaries
test<-  get(mouse.name) %>% filter(Point==point) %>%
group_by(Run) %>%  summarise(min=min(Angle), max=max(Angle),
mean=mean(Angle), interval=max(t))
plot.Y_vs_Angle<- function(mouse.name, point)
{
df1<- get(mouse.name) %>% filter(Point==point)
df1.ss<- data.frame(Run='Run1', x=NA, y=NA)
for (i in unique( df1$Run))
{
b0<- i==df1$Run
df1.ss.aux<- data.frame(predict(smooth.spline(df1$t[b0], df1$Angle[b0])))
df1.ss.aux$Run<- i
df1.ss<- rbind(df1.ss, df1.ss.aux )
}
df1.ss<- df1.ss[-1,]
df1<- cbind(df1, df1.ss$y)
names(df1)[8] <- "smoothAngle"
g1<- ggplot(df1, aes(t, smoothAngle, color=Run), size=0.5) +
geom_path(size=1.25) + theme_bw() +
labs(x=expression(~italic(time)), y=expression(~italic(~theta))) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
geom_vline(xintercept=0, linetype=2, size=1.25, col='gray') +
ggtitle(paste(mouse.name, point, sep=' - ')) +
NULL
g1<- g1 + geom_path(aes(t, smoothAngle)) +
NULL
g2<- g1 + facet_wrap( ~ Run) + #gganimate::transition_reveal(t) +
NULL
print(g2)
}
pdf(file='Angle_vs_Time_081019.pdf')
for (i in 1:9)
{
print(i)
plot.Y_vs_Angle(names.sheets[i], 'Head')
}
dev.off()
plot.Y_vs_X<- function(mouse.name, Point)
{
g1<-
get(mouse.name) %>% filter(Point==Point) %>%
ggplot(aes(X,Y)) +  geom_line(col='red') + theme_bw() +
labs(x=expression(~italic(X)), y=expression(~italic(Y))) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
ggtitle(mouse.name) + geom_smooth(col='black', size=1, se=FALSE) +
NULL
g1A<- g1 + facet_wrap( ~Run, ncol=3)
g1A
}
plot.Y_vs_X(names.sheets[9], 'Tail')
plot.Angle_vs_time<- function(mouse.name)
{
g1<-
get(mouse.name) %>%
ggplot(aes(t, Angle)) +
geom_line(col='red') + theme_bw() +
labs(x=expression(~italic(time)), y=expression(~italic(~theta))) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
ggtitle(paste(mouse.name, sep=' - ')) +
geom_smooth(col='black', size=1, se=FALSE) +
NULL
g1A<- g1 + facet_wrap( ~Run, ncol=3)
g1A
}
plot.Angle_vs_time(names.sheets[3])
plot.X_vs_Angle<- function(mouse.name, Point)
{
g1<-
get(mouse.name) %>% filter(Point==Point) %>%
ggplot(aes(X, Angle)) +  geom_path(col='red') + theme_bw() +
labs(x=expression(~italic(X)), y=expression(~italic(~theta))) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
geom_vline(xintercept=0, linetype=2, size=1.25, col='gray') +
ggtitle(paste(mouse.name, Point, sep=' - ')) +
# geom_smooth(col='black', size=1, se=FALSE) +
NULL
g1A<- g1 + facet_wrap( ~Run, ncol=3)
g1A
}
plot.X_vs_Angle(names.sheets[5], 'Head')
all.mice<- mouse.data[1,] ### initialises
for (i in names.sheets)
{
print( paste("mouse_",i,sep="") ,quote=FALSE)
mouse.data<- get(i)
all.mice<- rbind( all.mice, mouse.data)
}
all.mice<- all.mice[-1,]
mouse.freq<- table( all.mice$ID)
mouse.type<- c('WT','WT','WT','NPCUT','NPCUT','NPCUT', 'NPCTG', 'NPCTG','NPCTG')
all.mice$Type<- rep( mouse.type, mouse.freq)
length.catwalk<- 45
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
Test.vel$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
Test.vel$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
Test.vel$mean.angleNum<- as.numeric(unclass(Test.vel$mean.angle))
Test.vel$var.angle <- as.numeric(unclass(Test.vel$var.angle))
model.tr2<- tree( Type ~  mean.angleNum + velocity , data=Test.vel)
plot(model.tr2); text(model.tr2)
partition.tree(model.tr2, label='Type')
with(Test.vel, points(  mean.angleNum, velocity, pch=19, cex=1.5, col=as.numeric(Type)))
ggplot(Test.vel, aes( velocity,mean.angleNum, group=Type, color=Type)) +
geom_point(size=4) +
gg.partition.tree(model.tr2,
label='Type', color='black', size=9) +
geom_smooth(method='lm', se=FALSE, size=1.5) +
theme_classic() +
theme(legend.position=c(0.75,0.75)) +
NULL
model.tr2a<- tree( Type ~  var.angle + velocity , data=Test.vel)
plot(model.tr2a); text(model.tr2a)
plot(prune.tree(model.tr2a))
model.tr2a1<- prune.tree(model.tr2a, k=3) ### limit to 3 terminal nodes
plot(model.tr2a1); text(model.tr2a1)
partition.tree(model.tr2a, label='Type')
with(Test.vel, points(  var.angle, velocity, pch=19, cex=1.5, col=as.numeric(Type)))
ggplot(Test.vel, aes(  var.angle, velocity, group=Type, color=Type)) +
geom_point(size=4) +
gg.partition.tree(model.tr2a1,
label='Type', color='black', size=8) +
geom_smooth(method='lm', se=FALSE, size=1.5) +
theme_classic() +
theme(legend.position=c(0.75,0.75)) +
NULL
velocity.df$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
velocity.df$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
velocity.df$mean.angleNum<- as.numeric(unclass(velocity.df$mean.angle))
model.lda1<- klaR::partimat( Type ~ velocity + mean.angle, data=Test.vel, method='lda')
model.baes1<- klaR::partimat( Type ~ velocity + mean.angle, data=Test.vel,
method='sknn', kn=3)
rpart.plot::prp(test.tree1, extra=7) ### pretty tree
test.tree1<- rpart( Type ~ Yend + velocity  + mean.angle, data=Test.vel)
rpart.plot::prp(test.tree1, extra=7)
setdictory
getwd
getwd()
Test.vel$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
Test.vel$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
Test.vel$mean.angleNum<- as.numeric(unclass(Test.vel$mean.angle))
Test.vel$var.angle <- as.numeric(unclass(Test.vel$var.angle))
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
View(all.mice)
library(tidyverse)
library(lubridate)
library(plyr)
library(readxl) ### this worked
library(plotly)
library(gganimate)
library(RColorBrewer)
library(gifski)
plot.X_vs_Angle<- function(mouse.name, Point)
{
g1<-
get(mouse.name) %>% filter(Point==Point) %>%
ggplot(aes(X, Angle)) +  geom_path(col='red') + theme_bw() +
labs(x=expression(~italic(X)), y=expression(~italic(~theta))) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
geom_vline(xintercept=0, linetype=2, size=1.25, col='gray') +
ggtitle(paste(mouse.name, Point, sep=' - ')) +
# geom_smooth(col='black', size=1, se=FALSE) +
NULL
g1A<- g1 + facet_wrap( ~Run, ncol=3)
g1A
}
plot.X_vs_Angle(names.sheets[5], 'Head')
## doesn't seem to work
model.baes1<- klaR::partimat( Type ~ velocity + mean.angle, data=Test.vel,
method='naiveBayes')
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
Test.vel$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
Test.vel$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
Test.vel$mean.angleNum<- as.numeric(unclass(Test.vel$mean.angle))
Test.vel$var.angle <- as.numeric(unclass(Test.vel$var.angle))
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
mouse.freq<- table( all.mice$ID)
mouse.type<- c('WT','WT','WT','NPCUT','NPCUT','NPCUT', 'NPCTG', 'NPCTG','NPCTG')
all.mice$Type<- rep( mouse.type, mouse.freq)
################################### 23.08.19 ####
### consolidate data from nine mice into a data.frame ####
all.mice<- mouse.data[1,] ### initialises
for (i in names.sheets)
{
print( paste("mouse_",i,sep="") ,quote=FALSE)
mouse.data<- get(i)
all.mice<- rbind( all.mice, mouse.data)
}
all.mice<- all.mice[-1,]
################## animation plots ####
for (j in c('Centre', 'Head','Tail'))
for (i in names.sheets)
{
print( paste("mouse_",i,"_",j,".gif",sep="") ,quote=FALSE)
mouse.data<- get(i)
p0<- mouse.data %>% filter(Point==j) %>%
ggplot(aes(Y, Angle, color=t)) + geom_line(size=1) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line=element_line(colour='black')) +
labs(x=expression(~italic(Y)), y=expression(~italic(~theta))) +
scale_y_continuous(limits=c(-30,30), breaks=seq(-30, 30, by=5)) +
scale_x_continuous(limits=c(-35,31), breaks=c(-30,-15,0,15,30)) +
geom_hline(yintercept=0, linetype=2, size=1.25, col='gray') +
geom_vline(xintercept=0, linetype=2, size=1.25, col='gray') +
# theme(legend.position="none") +
geom_point(size=2, color='black') +
scale_colour_gradientn("time (s)", colours=rainbow(6))  +
NULL
animation::ani.options(loop=1) ### set value of loop
p1<- p0 + transition_reveal(t) +
labs(title=paste(i,j,sep=' '), subtitle="Time {frame} of {nframes}") +
geom_label(aes(y=max.Angle,  x=0,
label=as.character(round(t,2)), hjust=1/2, vjust=1/2),
colour='black')+
facet_grid(~ Run) +
NULL
##p2<- animate(p1, rewind=FALSE, nframes=100, fps=10, end_pause=10)
p2<- animate(p1, nframes=100, fps=10, renderer=gifski_renderer(loop=FALSE))
gganimate::anim_save(filename=paste("mouse_",i,"_",j,".gif",sep=""),
animation=p2, path=getwd())
} ### e
mouse.freq<- table( all.mice$ID)
mouse.type<- c('WT','WT','WT','NPCUT','NPCUT','NPCUT', 'NPCTG', 'NPCTG','NPCTG')
all.mice$Type<- rep( mouse.type, mouse.freq)
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
View(all.mice)
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
mouse.freq<- table( all.mice$ID)
mouse.type<- c('WT','WT','WT','NPCUT','NPCUT','NPCUT', 'NPCTG', 'NPCTG','NPCTG')
all.mice$Type<- rep( mouse.type, mouse.freq)
#### summary statistics ####
all.mice$CircAngle<- circular(rad(all.mice$Angle), type='directions')
all.mice.summary<-
all.mice %>% filter(Point=='Head') %>%
group_by(ID, Run) %>%
summarise(min=min(Angle, na.rm=TRUE), max=max(Angle, na.rm=TRUE),
mean=mean(Angle, na.rm=TRUE), stddev=sd(Angle, na.rm=TRUE),
time.interval=max(t, na.rm=TRUE))
test<- as.numeric(all.mice.summary$ID)
test<- ifelse(test==1 | test==8 | test ==9, 3,
ifelse(test==2 | test==3 | test==4, 1, 2))
### 3 = NPCT, 2 = NPCUT, 1=WT
test<- as.factor(test )
attr(test,'levels')<- c('WT','NPC-UT','NPC-T')
all.mice.summary$Tx<- test
rm(test)
pdf(file='boxplots_081019.pdf')
all.mice.summary %>% ggplot(aes(x=Tx, y=min)) + geom_boxplot()
all.mice.summary %>% ggplot(aes(x=Tx, y=max)) + geom_boxplot()
all.mice.summary %>% ggplot(aes(x=Tx, y=mean)) + geom_boxplot()
all.mice.summary %>% ggplot(aes(x=Tx, y=stddev)) + geom_boxplot()
all.mice.summary %>% ggplot(aes(x=Tx, y=time.interval)) + geom_boxplot()
dev.off()
col1<- wesanderson::wes_palette("Darjeeling1",3)
all.mice.summary %>% ggplot(aes(y=max-min,x=Tx, fill=Tx)) + geom_boxplot() +
scale_fill_manual(values=col1)
kruskal.test(max-min ~ Tx, data=all.mice.summary)
ID<- 'NPCTG277.4c'; run<-'RUN4'
aux<- all.mice[all.mice$ID==ID & all.mice$Run==run, ]
p1<-  ggplot(aux, aes(t, Angle)) + geom_line()  +
geom_smooth(se=FALSE) +
NULL
p1
p1<-  ggplot(aux, aes(t, Angle)) + geom_line()  +
geom_smooth(se=FALSE) +
NULL
p1
kruskal.test(max-min ~ Tx, data=all.mice.summary)
kruskal.test(max-min ~ Tx, data=all.mice.summary)
ID<- 'NPCTG277.4c'; run<-'RUN4'
aux<- all.mice[all.mice$ID==ID & all.mice$Run==run, ]
all.mice<- mouse.data[1,] ### initialises
for (i in names.sheets)
{
print( paste("mouse_",i,sep="") ,quote=FALSE)
mouse.data<- get(i)
all.mice<- rbind( all.mice, mouse.data)
}
all.mice<- all.mice[-1,]
mouse.freq<- table( all.mice$ID)
mouse.type<- c('WT','WT','WT','NPCUT','NPCUT','NPCUT', 'NPCTG', 'NPCTG','NPCTG')
all.mice$Type<- rep( mouse.type, mouse.freq)
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
Test.vel$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
Test.vel$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
Test.vel$mean.angleNum<- as.numeric(unclass(Test.vel$mean.angle))
Test.vel$var.angle <- as.numeric(unclass(Test.vel$var.angle))
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
View(all.mice)
#### summary statistics ####
all.mice$CircAngle<- circular(rad(all.mice$Angle), type='directions')
View(all.mice)
velocity.df<-  all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(CircAngle, na.rm=TRUE),
var.angle = var.circular(CircAngle, na.rm=TRUE)
)
Test.vel <- all.mice %>% filter(Point=='Head') %>%
group_by(Type, ID, Run) %>%
summarise(Xstart=X[which(t==0)],
YStart=Y[which(t==0)],
Xend = X[which(t==max(t))],
Yend = Y[which(t==max(t))],
madY = median(abs(Y)),
t = max(t),
mean.angle = mean.circular(abs(CircAngle), na.rm=TRUE),
var.angle = var.circular(abs(CircAngle), na.rm=TRUE)
)
Test.vel$Type <- factor( velocity.df$Type, levels=c('NPCUT', 'NPCTG', 'WT'))
Test.vel$velocity<- with(velocity.df, abs(Xend - Xstart)/t)
Test.vel$mean.angleNum<- as.numeric(unclass(Test.vel$mean.angle))
Test.vel$var.angle <- as.numeric(unclass(Test.vel$var.angle))
plot(model.tr2); text(model.tr2)
partition.tree(model.tr2, label='Type')
ggplot(Test.vel, aes( velocity,mean.angleNum, group=Type, color=Type)) +
geom_point(size=4) +
gg.partition.tree(model.tr2,
label='Type', color='black', size=9) +
geom_smooth(method='lm', se=FALSE, size=1.5) +
theme_classic() +
theme(legend.position=c(0.75,0.75)) +
NULL
model.tr2<- tree( Type ~  mean.angleNum + velocity , data=Test.vel)
plot(model.tr2); text(model.tr2)
install.packages('tree')
install.packages('tree')
R.version
update()
install.packages('updater')
